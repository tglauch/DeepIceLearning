[Basics]
#If set to True only frames with neutrinos as primaries are selected
onlyneutrinoasprimary = False

# number of MC-paths given, need to match the number of files to be shuffled, needs to start with 0
MC_path0 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11477/
MC_path1 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11981/ 
MC_path2 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11374/

geometry_file = /data/sim/sim-new/downloads/GCD/GeoCalibDetectorStatus_2012.56063_V0.i3.gz

out_folder = /data/user/mkronmueller/data/second_set/run01

dagman_folder = /data/user/mkronmueller/data/second_set/run01/dagman

input_shape = auto

PulseSeriesMap = InIceDSTPulses

## give a comma seperated list of foldes in MC_path to be processed, if 'allinmcpath' use all folders
folder_list = allinmcpath  

## give a comma seperated list of files to search for in subfolders of MC_path. If 'allinfolder' use all files.
### use standart unix syntax for using files matching a special regular expression, e.g. *numu*
file_list = allinfolder

# pickle it is
filelist_typ = pickle 

# maximum energy of events [GeV]
energy_cutoff = 100000000

# minimal energy requierment for taus [GeV]
minimal_tau_energy = 200000


### Define Input Variables Below, Reco Quantities
[depositedE]
function = calc_depositedE(x)
out_type = float64

[hitDOMs]
function = calc_hitDOMs(x)
out_type = float64

[firstParticle]
variable = ['I3MCTree'][0].pdg_encoding
out_type = float64

[energyFirstParticle]
variable = ['I3MCTree'][0].energy
out_type = float64

[zenith]
variable = ["LineFit"].dir.zenith
out_type = float64

[RunID]
variable = ['I3EventHeader'].run_id
out_type = float64

[EventID]
variable = ['I3EventHeader'].event_id
out_type = float64

[TauDecayLength]
function = tau_decay_length(x)
out_type = float64

[ClassificationLabel]
function = classificationTag(x)
out_type = float64

[StartingLabel]
function = starting(x)
out_type = float64

[UpDownLabel]
function = up_or_down(x)
out_type = float64

[CoincidenceLabel]
function = coincidenceLabel(x)
out_type = float64  


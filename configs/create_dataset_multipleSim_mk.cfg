[Basics]
# number of MC-paths given, need to match the number of files to be shuffled, needs to start with 0
# old MC
#MC_path0 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11477/
#MC_path1 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11981/ 
#MC_path2 = /data/sim/IceCube/2012/filtered/level2/neutrino-generator/11374/
# new MC from nancy
# low energy von 100 GeV-5 TeV, medium von 5 TeV-100 PeV
MC_path0 = /data/ana/Cscd/StartingEvents/NuGen/NuE/medium_energy/IC86_2013/l2
MC_path1 = /data/ana/Cscd/StartingEvents/NuGen/NuMu/medium_energy/IC86_2013/l2
MC_path2 = /data/ana/Cscd/StartingEvents/NuGen/NuTau/medium_energy/IC86_2013/l2

thisfolder = /data/user/mkronmueller/code/DeepIceLearning

geometry_file = /data/sim/sim-new/downloads/GCD/GeoCalibDetectorStatus_2012.56063_V0.i3.gz

out_folder = /data/user/mkronmueller/data/third_set/run01

dagman_folder = /data/user/mkronmueller/data/third_set/run01/dagman

fail_file = /data/user/mkronmueller/data/third_set/run01/fail_file

input_shape = auto

PulseSeriesMap = InIceDSTPulses

## give a comma seperated list of foldes in MC_path to be processed, if 'allinmcpath' use all folders
folder_list = allinmcpath  

## give a comma seperated list of files to search for in subfolders of MC_path. If 'allinfolder' use all files.
### use standart unix syntax for using files matching a special regular expression, e.g. *numu*
file_list = allinfolder

# pickle it is
filelist_typ = pickle 



[Cuts]
#set a specific cut on ON to aplly it
# only events with a neutrino as primary
only_neutrino_as_primary_cut = OFF

# maximum energy of events [GeV]
max_energy_cut = OFF
max_energy_cutoff = 100000000

# minmal energy of events [GeV]
min_energy_cut = OFF
min_energy_cutoff = 100

# minimal energy requierment for taus [GeV]
minimal_tau_energy_cut = OFF
minimal_tau_energy = 200000

# minimal amount of hit DOMs
min_hit_DOMs_cut = OFF
min_hit_DOMs = 9


### Define Input Variables Below, Reco Quantities
[depositedE]
function = calc_depositedE(x)
out_type = float64

[hitDOMs]
function = calc_hitDOMs(x)
out_type = float64

[firstParticle]
variable = ['I3MCTree'][0].pdg_encoding
out_type = float64

[energyFirstParticle]
variable = ['I3MCTree'][0].energy
out_type = float64

[zenith]
variable = ["LineFit"].dir.zenith
out_type = float64

[RunID]
variable = ['I3EventHeader'].run_id
out_type = float64

[EventID]
variable = ['I3EventHeader'].event_id
out_type = float64

[TauDecayLength]
function = tau_decay_length(x)
out_type = float64

[ClassificationLabel]
function = classificationTag(x)
out_type = float64

[StartingLabel]
function = starting(x)
out_type = float64

[UpDownLabel]
function = up_or_down(x)
out_type = float64

[CoincidenceLabel]
function = coincidenceLabel(x)
out_type = float64  

[MinBias_Filter]
variable = ["FilterMask"]["FilterMinBias_13"]
out_type = float64

[Cascade_Filter]
variable = ["FilterMask"]["CascadeFilter_13"]
out_type = float64

[Muon_Filter]
variable = ["FilterMask"]["MuonFilter_13"]
out_type = float64
